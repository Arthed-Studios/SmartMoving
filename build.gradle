plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group = 'com.github.ipecter'
version = '1.0.0'

ConfigurableFileTree libsImplementation = fileTree(dir: 'libs-implementation', include: ['*.jar'])

repositories {
    mavenCentral()
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'worldguard'
        url = 'https://maven.enginehub.org/repo/'
    }
    maven {
        url = uri("https://papermc.io/repo/repository/maven-public/")
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    implementation libsImplementation
    compileOnly "com.sk89q.worldguard:worldguard-bukkit:7.0.5-SNAPSHOT"
    compileOnly "me.clip:placeholderapi:2.11.1"
    compileOnly "io.papermc.paper:paper-api:1.19.1-R0.1-SNAPSHOT"
    compileOnly "net.kyori:adventure-platform-bukkit:4.1.0"
    compileOnly "net.kyori:adventure-text-minimessage:4.11.0"
    implementation project(':NMS')
    implementation project(':VersionIndependentNMS')
    implementation project(':LegacyIndependentNMS')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}
java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}
tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
